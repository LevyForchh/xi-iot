kind: Deployment
apiVersion: apps/v1
metadata:
  name: mqtt-sensor-app
  labels:
    app: mqtt-sensor-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mqtt-sensor-app
  template:
    metadata:
      labels:
        app: mqtt-sensor-app
    spec:
      containers:
      - name: app-container
        image: xiiot/mqtt-sensor:0.1.0
        imagePullPolicy: Always
        command: ["/usr/local/bin/python", "/code/main.py"]
        env:
        - name: MOCK_DATA_CSV_URL
          value: "https://andy-sherlock.s3.amazonaws.com/demo/mock-sensor-data.csv?AWSAccessKeyId=AKIAI7XB5EC3CL6BZJHQ&Expires=1562170952&Signature=G1MzLUyD0XKURxF%2Fqm%2FaqgindzI%3D"
        - name: MQTT_INTERVAL_SEC
          value: "5"
        - name: MQTT_BROKER_IP
          value: mqttserver-svc.default
        - name: MQTT_BROKER_PORT
          value: "1883"
        - name: MQTT_TOPIC
          value: "pressure-p"
        - name: MQTT_CLIENT_CERTIFICATES
          value: UEsDBAoAAAAAAOSG2U4qNaFhpAUAAKQFAAAdAAAAMTU2MTQ4MTcwNzQzM19jZXJ0aWZpY2F0ZS5jcnQtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRC9qQ0NBdWFnQXdJQkFnSVVKYm85TG1YLzVSK0xBcm9wUDZQZGlVRDRYZlV3RFFZSktvWklodmNOQVFFTApCUUF3YlRFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RVRBUEJnTlZCQWNUCkNGTmhiaUJLYjNObE1SUXdFZ1lEVlFRS0V3dE9kWFJoYm1sNExVbHZWREVMTUFrR0ExVUVDeE1DUTBFeEV6QVIKQmdOVkJBTVRDazUxZEdGdWFYZ2dRMEV3SGhjTk1Ua3dOakkxTVRZMU1EQXdXaGNOTkRrd05qRTNNVFkxTURBdwpXakJ3TVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVSTUE4R0ExVUVCeE1JClUyRnVJRXB2YzJVeEVEQU9CZ05WQkFvVEIwNTFkR0Z1YVhneEVUQVBCZ05WQkFzVENGTm9aWEpzYjJOck1SUXcKRWdZRFZRUURFd3R0Y1hSMExXTnNhV1Z1ZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQwpnZ0VCQUoxSm9WbVpyWTY2UktuZ2pVM2FINmVlUkhKd1FhTVFhVXlTZlNyNE9RcVEySms5SG9WNXhhYlJpQlR2CkJTbXhTVVpRL2pBaGVFSDZONTRvNXlwdnAwa09ITEl2Z1loanpWY1NzWExoVGdCcXNIR05hWkFxL2E1K1o1d3YKbTJ3T216WW1YcUdFcW1IaHN3NFkzYUV1Zk1CKzNraUhMNjNzaitzWmJrbTQ5OWpSQXlESjdJWmhjMWZENUpTNQpzTlU5YmF6SUdnWmIvUjRDRmNUUTIydG0yeHlSeTlVSlhqWnpEUTlyeW8wM1dSbmcxamhQcTdsM2EzKzZTaVpyCkRrbmllS2QxRk5VMU5XNmZIMjQzazdGQkwvbG05OE53c0Z6LzY4RVBuZnVDVzhqWkpQZzVwbmkxdkpYMHJpRmsKT0hmbTR4eDhQOWU5cStNSSsxRlE3SkNwalJrQ0F3RUFBYU9Ca2pDQmp6QU9CZ05WSFE4QkFmOEVCQU1DQmFBdwpFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVKYk00Ci9OeVlCdllJRkpreW43WUZORXNXL0NZd0h3WURWUjBqQkJnd0ZvQVVoTytHVjJtZnFyb3JWcWJQRm45Z2wxcysKWTZFd0dnWURWUjBSQkJNd0VZSUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUM1aW9LVWk0MTBOd0JrK3pnNTllaTVxVjJLK091aTNqUlVjejJlUTZ6cCtHbEd5OHNkOGYyeitNc01yWFlZCkVlZEFIaXM5dFlRb0FZbGN6Z3dFM29SRWk0NlM4U0FueFpKQ3lPbm90VFhDTy9RbjNsQTVnQVBnK28yaWQ4eXkKdmI1Zk91dWRJWWxjNHVsV0FKSmo2Q0RJQzlNQm9WVjVvQTNOV3NhMHlvbE5CZ1VYWnRiOTdLYys5d0doS0ZZSQpyWm9Td2FwYmYyVzZDbDFDNFdUTkJMei9xVzE0ZHRWUS9WNTNVZzVzWkxra2c1cEJMU2dSQTNyZ3h3V05Eb09JCjg1ZTZMaGwzRWVOM0Z3Rm12em5sL3V0blJhaG5ZS3dsSkJIdUcwSXlDSkltM1lnbEFYc1FhalE0MjlpYzRwUFAKTjdKQzNaUXU3TjFhMzlxdjRHcHBaUE52Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KUEsDBAoAAAAAAOSG2U5TXeaZjwYAAI8GAAAcAAAAMTU2MTQ4MTcwNzQzM19wcml2YXRlS2V5LmtleS0tLS0tQkVHSU4gUlNBIFBSSVZBVEUgS0VZLS0tLS0KTUlJRXBBSUJBQUtDQVFFQW5VbWhXWm10anJwRXFlQ05UZG9mcDU1RWNuQkJveEJwVEpKOUt2ZzVDcERZbVQwZQpoWG5GcHRHSUZPOEZLYkZKUmxEK01DRjRRZm8zbmlqbkttK25TUTRjc2krQmlHUE5WeEt4Y3VGT0FHcXdjWTFwCmtDcjlybjVubkMrYmJBNmJOaVplb1lTcVllR3pEaGpkb1M1OHdIN2VTSWN2cmV5UDZ4bHVTYmozMk5FRElNbnMKaG1GelY4UGtsTG13MVQxdHJNZ2FCbHY5SGdJVnhORGJhMmJiSEpITDFRbGVObk1ORDJ2S2pUZFpHZURXT0Urcgp1WGRyZjdwS0ptc09TZUo0cDNVVTFUVTFicDhmYmplVHNVRXYrV2IzdzNDd1hQL3J3UStkKzRKYnlOa2srRG1tCmVMVzhsZlN1SVdRNGQrYmpISHcvMTcycjR3ajdVVkRza0ttTkdRSURBUUFCQW9JQkFIc0RjeVhZZzF6MVlXNWIKS1NpU1I5K1ljSC93TytXRW1GWkMyNUlYd01UNnMreGxXTkdiZzNJTXZobGhOdkI4cjRwSEhnWVdweTh5dXZ6LwprSXduOXZXMEM4MXdTaWFacDZkSi8yNlJ0NmVyeVlPRnplSHJQYXlUUUFWdlZtY1VwVitjY3Jad1E3RjZDOGdpCnVuT3RIL1NOUk53RW5zMndEbjhZektEc0FTdVlVcWprZjl0S203VUZXc3hMVUdnb1ZXVHkrS2NhUSt3dER2angKY250WE1QcktDcG1TdGVUS28rSWYreEtrUjl1S212N1BwWXBFdnNXREdhbnRqOFVhWjBKcVRmeUc1Y3pHUzdnUQorU0hPQ1llVnBucDN0MVZkLzZ0OFdta20wSEgzNzNpMFUxQ29yVGZ6ZTJ2b05mUjRiOVA0b1J3NDY4cUVkbDE5CmVQUTJ6WUVDZ1lFQXhkVk1IOW4yMkUzaC9nZm1HU3AwWkl2aXVadmZRa0dnMnJmb091SnNLa05NRnZhZFpCSFgKUUUxRHRtZVVsdVZWOVpOWDk4UCtLM0s1NEEwdkIwSWhuQW9Yazc3WENoWDN2MlBOUC81Q2JhOFQ0cE9nRlJqOAp0WVQzWUJRK3VtMFV2RjZ4VEJjN0JDSWlFaGFGYkxDWmlWcS8vcU1JSmhheFEyNlNoTGtlNjUwQ2dZRUF5NGlDClJWZXlYMFFOc1k5UU1WSmJ1anAzV1ZWVjlRdUYrWWcyTklKZ3pDcy9YZE55Zmg4REZXQUxaM0ZiTHpUNFBzWTgKN08xUHBvY0UwRkpWL1paWXRzQ0UyL1F1U2tFUEk2S0xwUDhUZXNmS21ncDIrYnluYURadzFkNmdvLzNlTnBJOQoycnhIdFBrZENBSG01ZGk3SzBQOW1RdXA3MnpzL1ptR1VKUTNaSzBDZ1lBTFpUam9VTWJPT05ZK3FyZlBWVW0xCkRQVzNXVW9uNTkzYkcyTE9HWUsvZ0hiZWo4QUxKcGZ1aFVUVU9lMHVML0dlbnFrZmhYT2JqeFV6MmE2T3pYbGcKSXBpdkV2d1NBYWZ1cDFJSVVKNEU4V1BFMWxvUFBRdzViSHBQVjNzeGc5MEE2TGR2dVpyVnB4MnRTd3pPY1BHMwpIcm9XY2MraldnVkY3QldXZlk5UlpRS0JnUUNBdFo3TUF4MUZxVitQZmJXVXV5Uk9yRkoxSjhYbjVKV2dxMGE4CkJnYjRsaERJWU1MeWh1SUlUbWhuemdOLzR0dHB0eXNvR1JwWmtPQzJiSnI4ZG1zN2hwdCtEUGlJOUlPQ1lYUTEKcnlpK2FFSHpEOU1WTXZ3YXB2TE1ETEZCZzNWV3hUeGdhdGhkMVh0S2FRbC9LSU9VWkxhbVpmM2M3dUVmcmtxRwpBblRWTVFLQmdRQ21nM3d1NjlDUHZSYlk5RzBsK1E1OUxndGs0dmZobXpMMWNKWEhJSDFSenVqRHdHVTNoTHN6Ci8wQkZpb3QzYWRrRGpPaEpyeFp4aWFwUjBGTVJmOWIwbkxwVlo1NWdZREdNamtyZ2Fac3hLc1dRenRzYTJuVjcKRytvbTlCMGRCUFcyUUlYa2k1QVZJVTBab29CTE9GWjhCTjhxVEsvS0NSYmFmRW9yWEJqQ1hBPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0KUEsDBAoAAAAAAOSG2U4siMe7MgUAADIFAAAfAAAAMTU2MTQ4MTcwNzQzM19DQUNlcnRpZmljYXRlLmNydC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEcWpDQ0FwS2dBd0lCQWdJVVVmeGZKdWhVVEZJdEZSVnpqSC9NUFZleDgxY3dEUVlKS29aSWh2Y05BUUVMCkJRQXdiVEVMTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhFVEFQQmdOVkJBY1QKQ0ZOaGJpQktiM05sTVJRd0VnWURWUVFLRXd0T2RYUmhibWw0TFVsdlZERUxNQWtHQTFVRUN4TUNRMEV4RXpBUgpCZ05WQkFNVENrNTFkR0Z1YVhnZ1EwRXdIaGNOTVRrd05qSTBNRGd5TVRBd1doY05NalF3TmpJeU1EZ3lNVEF3CldqQnRNUXN3Q1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVJNQThHQTFVRUJ4TUkKVTJGdUlFcHZjMlV4RkRBU0JnTlZCQW9UQzA1MWRHRnVhWGd0U1c5VU1Rc3dDUVlEVlFRTEV3SkRRVEVUTUJFRwpBMVVFQXhNS1RuVjBZVzVwZUNCRFFUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFNVmhjeDRYU0h4QW14V1p0YkxRZU1JU0QxVkNWZUx4L3Fqc05kbGYvUGlRM05tK0hzYW55d1hQTlplR0J0WkgKK2Mwbm1RQ0l0M0ZHTjJKa1FnYXkzeGhmV0ZMbXJVK2xXS3R2dGNDZ3ZXUlBXRVpSQ3lyS29IaWtxVFVrenRSQgowU3U5QzBERzNVVWpPVHNYR3ZyZzlzT1c4T3JSaHc0Rm5LSzFrZWlmTmFpNk5xNFp0SmNmU29WMDJqdHhwQ2tKCjlLY0trZSs3WVVWZWQxWjhMek1GM0UreEJ1dTZpbEZGZm5YMTByayttTXpaMDRCUXVGQkgzVU9jakNhcFcwUU4KckJaMlR4cTh2SmFWODhnZStIUU5hSnVXZ1FJS3BMRjdCbjdEalN0S2IrYy9nZWV2U2wxVi9LTGdTNi9HY3ZndgpFbzdIcFhBTUVIOVRsRDczWnJqa2NUY0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVR2aGxkcG42cTZLMWFtenhaL1lKZGJQbU9oTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQzRrdmcxRVpLMS9pdk14ZTBOTGh1VDFNKzlYT2FKbHNpN3ZoenNLSVdBNEwrTwo3TFJKNFdwZXNoQVlnWXRaeUdIcHU5Wnk4cWNuL1pwaERITFZFN0ljS2J0VFVPd01xbWxXZVdWREpGbHVDQ1V2Ck83MjdqdVVEQ3FOOHY4TDhFY2thZjFVSkpYY25zb2JqY3JvRkRCNXRiZmhQMjk2OHhzbS9acUdSZmgwQkt6SmMKcldLT21OR0FaRm54WFJqRyt1dUhndlNlMnBiZkdqWVg1RzR2cnFmNTBWYVdjUFNHN0pBOC94R1hlNVMxNzVXcgpLd2hWYTNDSTlOR0JtdlVKQXo0WGhtNnY3RTlNd1g5cGdOQ2RIYXZPemZzV0tNNnhPTko1Q2lKNUZsQk5acE9FCmE2TGI5NWx4SFgwNDBHcWNab0JkQ0VnWDBabSs3Ry9LZk1WMjB2RVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpQSwECFAAKAAAAAADkhtlOKjWhYaQFAACkBQAAHQAAAAAAAAAAAAAAAAAAAAAAMTU2MTQ4MTcwNzQzM19jZXJ0aWZpY2F0ZS5jcnRQSwECFAAKAAAAAADkhtlOU13mmY8GAACPBgAAHAAAAAAAAAAAAAAAAADfBQAAMTU2MTQ4MTcwNzQzM19wcml2YXRlS2V5LmtleVBLAQIUAAoAAAAAAOSG2U4siMe7MgUAADIFAAAfAAAAAAAAAAAAAAAAAKgMAAAxNTYxNDgxNzA3NDMzX0NBQ2VydGlmaWNhdGUuY3J0UEsFBgAAAAADAAMA4gAAABcSAAAAAA==